---
- hosts: all
  become: yes
  vars_files:
  - variables.yml
  - vars/version_debian/default.yml

  handlers:
    - name: update environment
      ansible.builtin.shell: '. /etc/environment && echo $PATH'
      register: envs_vars
 
  tasks:
  - name: Debug
    ansible.builtin.debug:
     msg: "{{ ansible_lsb.id | lower }}" # Here I use a function (filters) to set ansible_lsb.id value to lower case
     # You can use this when adding the Docker repo url for Ubuntu/Debian, CentOS/Fedora
     # 2 tasks only covers 4 distributions
     # Use Ansible facts and conditionals

  - name: Verify if Golang is installed
    ansible.builtin.stat:
      path: "{{ go_install_path }}/go/bin/go"
    register: go
     
  - name: Install golang {{ go_version }}
    ansible.builtin.unarchive:
      src: https://golang.org/dl/go{{ go_version }}.linux-amd64.tar.gz
      dest: "{{ go_install_path }}"
      remote_src: yes
    when: go.stat.exists == False

  - name: Update system path
    ansible.builtin.lineinfile:
     path: /etc/environment
     line: PATH="$PATH:/bin:/usr/bin:{{ go_install_path }}/go/bin"
     backup: yes
    notify: 
      - update environment

  # - name: Get env vars values
  #   ansible.builtin.debug:
  #     msg: "Variable values {{ envs_vars.stdout }}"

  - name: with_items
    debug:
      msg: "{{ item }}"
    with_items: "{{ install_packages_list }}"

 # Docker
  - name: Remove old Docker packages
    apt: 
      name: "{{ install_packages_list }}"
      state: absent
      register: docker_packages

  - name: Setup repository packages
    package:
     name: "{{ install_packages_list }}"
     state: present
     register: repo_packages

  - name: Add Docker GPG key
    ansible.builtin.apt_key:
      url: https://download.docker.com/linux/{{ ansible_lsb.id | lower }}/gpg
      id: 7EA0A9C3F273FCD8
      keyring: /usr/share/keyrings/docker-archive-keyring.gpg
      state: present
    when: ansible_lsb.id | lower == "ubuntu" or ansible_lsb.id | lower == "debian"
    register: gpg_repo

  - name: Add Docker Repository
    ansible.builtin.apt_repository:
      repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/{{ ansible_lsb.id | lower }} {{ ansible_lsb.codename }} stable"
      state: present
    when: ansible_lsb.id | lower == "ubuntu" or ansible_lsb.id | lower == "debian"
    register: docker_repo

  - name: Update repository list
    notify: update environment
    ansible.builtin.apt:
      update_cache: yes
    when: ansible_lsb.id | lower == "ubuntu" or ansible_lsb.id | lower == "debian"
    
  - name: Install Docker
    ansible.builtin.package:
     name: "{{ packages }}"
     state: present
    vars:
      packages:
        - docker-ce 
        - docker-ce-cli 
        - containerd.io
    register: docker_install 

  - name: Debug
    ansible.builtin.debug:
     msg: "{{ docker_install }}"
